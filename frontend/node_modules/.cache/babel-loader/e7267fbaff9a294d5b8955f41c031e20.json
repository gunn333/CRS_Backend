{"ast":null,"code":"var _jsxFileName = \"D:\\\\CRS_Backend\\\\frontend\\\\src\\\\components\\\\ReviewCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport useFetch from \"../hooks/useFetch\";\nimport { useAuthContext } from \"../hooks/useAuthContext\";\nimport SuccessAlert from \"../components/SuccessAlert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReviewCard = _ref => {\n  _s();\n\n  let {\n    carId\n  } = _ref;\n  const {\n    user\n  } = useAuthContext();\n  const [newReview, setNewReview] = useState(\"\");\n  const [reviews, setReviews] = useState([]);\n  const [success, setSuccess] = useState(\"\"); // Fetch reviews using the useFetch hook\n\n  const {\n    data: data,\n    isPending,\n    error\n  } = useFetch(`api/review/carReviews/${carId}`, user.token); // Change 'reviews' to your API endpoint\n\n  useEffect(() => {\n    if (data) {\n      console.log(data);\n      setReviews(data); // Update the reviews state when data is fetched\n    }\n  }, [data]);\n\n  const handleReviewSubmit = async () => {\n    try {\n      console.log(\"hai\");\n      const response = await fetch('https://car-rental-mern.onrender.com/api/review/createReview', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${user.token}` // Assuming you have an authentication token\n\n        },\n        body: JSON.stringify({\n          comment: newReview,\n          car_id: carId,\n          rating: 5 // Add other data like rating, car_id, etc. as needed\n\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to post review');\n      }\n\n      const newData = {\n        user_id: {\n          username: user.email\n        },\n        comment: newReview,\n        date: formatDate(Date.now())\n      };\n      setReviews([...reviews, newData]);\n      console.log(newData);\n      setNewReview(''); // Clear the textarea\n\n      setSuccess(\"Review updated\");\n    } catch (error) {\n      console.error(error); // Handle error, show a message, etc.\n    }\n  };\n\n  const formatDate = dateString => {\n    const options = {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\"\n    };\n    const date = new Date(dateString);\n    return date.toLocaleDateString(undefined, options);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container reviews-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), success && /*#__PURE__*/_jsxDEV(SuccessAlert, {\n        success: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card review-card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"exampleFormControlTextarea1\",\n                  className: \"form-label\",\n                  children: \"Write Review\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  className: \"form-control\",\n                  id: \"exampleFormControlTextarea1\",\n                  rows: \"3\",\n                  value: newReview,\n                  onChange: e => setNewReview(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-auto\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"btn btn-primary mb-0\",\n                    onClick: handleReviewSubmit,\n                    children: \"Post Review\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), isPending && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading reviews...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 23\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error fetching reviews: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }, this), reviews && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: reviews.map((review, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card review-card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"card-title reviewer-name\",\n                children: [review.user_id.username, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: review.comment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text review-date\",\n                children: formatDate(review.date)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 21\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReviewCard, \"GcUyEvalcefIYABnwIzaweK0O7E=\", false, function () {\n  return [useAuthContext, useFetch];\n});\n\n_c = ReviewCard;\nexport default ReviewCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReviewCard\");","map":{"version":3,"names":["React","useState","useEffect","useFetch","useAuthContext","SuccessAlert","ReviewCard","carId","user","newReview","setNewReview","reviews","setReviews","success","setSuccess","data","isPending","error","token","console","log","handleReviewSubmit","response","fetch","method","headers","Authorization","body","JSON","stringify","comment","car_id","rating","ok","Error","newData","user_id","username","email","date","formatDate","Date","now","dateString","options","year","month","day","hour","minute","toLocaleDateString","undefined","e","target","value","message","map","review","index"],"sources":["D:/CRS_Backend/frontend/src/components/ReviewCard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport useFetch from \"../hooks/useFetch\";\r\nimport { useAuthContext } from \"../hooks/useAuthContext\";\r\nimport SuccessAlert from \"../components/SuccessAlert\";\r\n\r\nconst ReviewCard = ({ carId }) => {\r\n  const { user } = useAuthContext();\r\n\r\n  const [newReview, setNewReview] = useState(\"\");\r\n  const [reviews, setReviews] = useState([]);\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  // Fetch reviews using the useFetch hook\r\n  const {\r\n    data: data,\r\n    isPending,\r\n    error,\r\n  } = useFetch(`api/review/carReviews/${carId}`, user.token); // Change 'reviews' to your API endpoint\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      console.log(data);\r\n      setReviews(data); // Update the reviews state when data is fetched\r\n    }\r\n  }, [data]);\r\n\r\n  const handleReviewSubmit = async () => {\r\n    try {\r\n      console.log(\"hai\");\r\n      const response = await fetch('https://car-rental-mern.onrender.com/api/review/createReview', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${user.token}`, // Assuming you have an authentication token\r\n        },\r\n        body: JSON.stringify({\r\n          comment: newReview,\r\n          car_id : carId,\r\n          rating : 5\r\n          // Add other data like rating, car_id, etc. as needed\r\n        }),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error('Failed to post review');\r\n      }\r\n  \r\n      const newData = {user_id : {username : user.email },comment : newReview,date : formatDate(Date.now())}\r\n      setReviews([...reviews, newData]); \r\n      console.log(newData);\r\n      setNewReview(''); // Clear the textarea\r\n      setSuccess(\"Review updated\");\r\n    } catch (error) {\r\n      console.error(error);\r\n      // Handle error, show a message, etc.\r\n    }\r\n  };\r\n  \r\n\r\n  const formatDate = (dateString) => {\r\n    const options = {\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    };\r\n\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(undefined, options);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section className=\"container reviews-section\">\r\n        <br />\r\n        <h2>Reviews</h2>\r\n        {success && <SuccessAlert success={success} />}\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 mb-4\">\r\n            <div className=\"card review-card\">\r\n              <div className=\"card-body\">\r\n                <div className=\"mb-3\">\r\n                  <label\r\n                    htmlFor=\"exampleFormControlTextarea1\"\r\n                    className=\"form-label\"\r\n                  >\r\n                    Write Review\r\n                  </label>\r\n                  \r\n                  <textarea\r\n                    className=\"form-control\"\r\n                    id=\"exampleFormControlTextarea1\"\r\n                    rows=\"3\"\r\n                    value={newReview}\r\n                    onChange={(e) => setNewReview(e.target.value)}\r\n                  ></textarea>\r\n                  <br />\r\n                  <div className=\"col-auto\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-primary mb-0\"\r\n                      onClick={handleReviewSubmit}\r\n                    >\r\n                      Post Review\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <br />\r\n        {isPending && <p>Loading reviews...</p>}\r\n        {error && <p>Error fetching reviews: {error.message}</p>}\r\n        {reviews && (\r\n          <div className=\"row\">\r\n            {reviews.map((review, index) => (\r\n              <div key={index} className=\"col-md-12 mb-4\">\r\n                <div className=\"card review-card\">\r\n                  <div className=\"card-body\">\r\n                    <h6 className=\"card-title reviewer-name\">\r\n                      {review.user_id.username} {/* Display username */}\r\n                    </h6>\r\n                    <p className=\"card-text\">{review.comment}</p>\r\n                    <p className=\"card-text review-date\">\r\n                      {formatDate(review.date)}\r\n                    </p>{\" \"}\r\n                    {/* Format date and time */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </section>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReviewCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}