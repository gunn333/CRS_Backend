{"ast":null,"code":"// import { useState } from 'react'\n// import { useAuthContext } from './useAuthContext'\n// export const useLogin = () => {\n//   const [error, setError] = useState(null)\n//   const [isLoading, setIsLoading] = useState(null)\n//   const { dispatch } = useAuthContext()\n//   const login = async (email, password) => {\n//     setIsLoading(true)\n//     setError(null)\n//     const response = await fetch('https://car-rental-mern.onrender.com/api/user/login', {\n//       method: 'POST',\n//       headers: {'Content-Type': 'application/json'},\n//       body: JSON.stringify({ email, password })\n//     })\n//     const json = await response.json()\n//     if (!response.ok) {\n//       setIsLoading(false)\n//       setError(json.error)\n//     }\n//     if (response.ok) {\n//       // save the user to local storage\n//       localStorage.setItem('user', JSON.stringify(json))\n//       // update the auth context\n//       dispatch({type: 'LOGIN', payload: json})\n//       // update loading state\n//       setIsLoading(false)\n//     }\n//   }\n//   return { login, isLoading, error }\n// }","map":{"version":3,"names":[],"sources":["D:/CRS_Backend/frontend/src/hooks/useLogin.js"],"sourcesContent":["// import { useState } from 'react'\r\n// import { useAuthContext } from './useAuthContext'\r\n\r\n\r\n\r\n// export const useLogin = () => {\r\n//   const [error, setError] = useState(null)\r\n//   const [isLoading, setIsLoading] = useState(null)\r\n//   const { dispatch } = useAuthContext()\r\n\r\n//   const login = async (email, password) => {\r\n//     setIsLoading(true)\r\n//     setError(null)\r\n        \r\n//     const response = await fetch('https://car-rental-mern.onrender.com/api/user/login', {\r\n//       method: 'POST',\r\n//       headers: {'Content-Type': 'application/json'},\r\n//       body: JSON.stringify({ email, password })\r\n//     })\r\n//     const json = await response.json()\r\n\r\n//     if (!response.ok) {\r\n//       setIsLoading(false)\r\n//       setError(json.error)\r\n//     }\r\n//     if (response.ok) {\r\n//       // save the user to local storage\r\n//       localStorage.setItem('user', JSON.stringify(json))\r\n\r\n//       // update the auth context\r\n//       dispatch({type: 'LOGIN', payload: json})\r\n\r\n//       // update loading state\r\n//       setIsLoading(false)\r\n//     }\r\n//   }\r\n\r\n//   return { login, isLoading, error }\r\n// }"],"mappings":"AAAA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA"},"metadata":{},"sourceType":"module"}