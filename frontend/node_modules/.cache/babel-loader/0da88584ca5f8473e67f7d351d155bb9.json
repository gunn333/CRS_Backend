{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useFetch = (url, token) => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchMyBooking = async () => {\n      try {\n        const response = await fetch(`https://car-rental-mern.onrender.com/${url}`, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch data\");\n        }\n\n        const data = await response.json();\n        setData(data);\n        setError(null);\n        setIsPending(false);\n      } catch (error) {\n        console.error(error);\n        setError(error);\n        setIsPending(false);\n      }\n    };\n\n    fetchMyBooking();\n  }, [url, token]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n\n_s(useFetch, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");\n\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","token","data","setData","isPending","setIsPending","error","setError","fetchMyBooking","response","fetch","headers","Authorization","ok","Error","json","console"],"sources":["D:/CRS_Backend/frontend/src/hooks/useFetch.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useFetch = (url, token) => {\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchMyBooking = async () => {\r\n      try {\r\n        const response = await fetch(`https://car-rental-mern.onrender.com/${url}`, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch data\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        setData(data);\r\n        setError(null);\r\n        setIsPending(false);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setError(error);\r\n        setIsPending(false);\r\n      }\r\n    };\r\n\r\n    fetchMyBooking();\r\n  }, [url, token]);\r\n\r\n  return { data, isPending, error };\r\n};\r\n\r\nexport default useFetch;\r\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;EAAA;;EAC/B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;EACA,MAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMU,cAAc,GAAG,YAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,wCAAuCV,GAAI,EAA7C,EAAgD;UAC1EW,OAAO,EAAE;YACP,gBAAgB,kBADT;YAEPC,aAAa,EAAG,UAASX,KAAM;UAFxB;QADiE,CAAhD,CAA5B;;QAOA,IAAI,CAACQ,QAAQ,CAACI,EAAd,EAAkB;UAChB,MAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;QACD;;QAED,MAAMZ,IAAI,GAAG,MAAMO,QAAQ,CAACM,IAAT,EAAnB;QACAZ,OAAO,CAACD,IAAD,CAAP;QACAK,QAAQ,CAAC,IAAD,CAAR;QACAF,YAAY,CAAC,KAAD,CAAZ;MACD,CAhBD,CAgBE,OAAOC,KAAP,EAAc;QACdU,OAAO,CAACV,KAAR,CAAcA,KAAd;QACAC,QAAQ,CAACD,KAAD,CAAR;QACAD,YAAY,CAAC,KAAD,CAAZ;MACD;IACF,CAtBD;;IAwBAG,cAAc;EACf,CA1BQ,EA0BN,CAACR,GAAD,EAAMC,KAAN,CA1BM,CAAT;EA4BA,OAAO;IAAEC,IAAF;IAAQE,SAAR;IAAmBE;EAAnB,CAAP;AACD,CAlCD;;GAAMP,Q;;AAoCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}