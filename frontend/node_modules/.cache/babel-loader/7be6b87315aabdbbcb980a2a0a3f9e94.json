{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import useFetch from \"../hooks/useFetch\";\n// import { useAuthContext } from \"../hooks/useAuthContext\";\n// import SuccessAlert from \"../components/SuccessAlert\";\n// const ReviewCard = ({ carId }) => {\n//   const { user } = useAuthContext();\n//   const [newReview, setNewReview] = useState(\"\");\n//   const [reviews, setReviews] = useState([]);\n//   const [success, setSuccess] = useState(\"\");\n//   // Fetch reviews using the useFetch hook\n//   const {\n//     data: data,\n//     isPending,\n//     error,\n//   } = useFetch(`api/review/carReviews/${carId}`, user.token); // Change 'reviews' to your API endpoint\n//   useEffect(() => {\n//     if (data) {\n//       console.log(data);\n//       setReviews(data); // Update the reviews state when data is fetched\n//     }\n//   }, [data]);\n//   const handleReviewSubmit = async () => {\n//     try {\n//       console.log(\"hai\");\n//       const response = await fetch('https://car-rental-mern.onrender.com/api/review/createReview', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//           Authorization: `Bearer ${user.token}`, // Assuming you have an authentication token\n//         },\n//         body: JSON.stringify({\n//           comment: newReview,\n//           car_id : carId,\n//           rating : 5\n//           // Add other data like rating, car_id, etc. as needed\n//         }),\n//       });\n//       if (!response.ok) {\n//         throw new Error('Failed to post review');\n//       }\n//       const newData = {user_id : {username : user.email },comment : newReview,date : formatDate(Date.now())}\n//       setReviews([...reviews, newData]); \n//       console.log(newData);\n//       setNewReview(''); // Clear the textarea\n//       setSuccess(\"Review updated\");\n//     } catch (error) {\n//       console.error(error);\n//       // Handle error, show a message, etc.\n//     }\n//   };\n//   const formatDate = (dateString) => {\n//     const options = {\n//       year: \"numeric\",\n//       month: \"long\",\n//       day: \"numeric\",\n//       hour: \"2-digit\",\n//       minute: \"2-digit\",\n//     };\n//     const date = new Date(dateString);\n//     return date.toLocaleDateString(undefined, options);\n//   };\n//   return (\n//     <div>\n//       <section className=\"container reviews-section\">\n//         <br />\n//         <h2>Reviews</h2>\n//         {success && <SuccessAlert success={success} />}\n//         <div className=\"row\">\n//           <div className=\"col-md-12 mb-4\">\n//             <div className=\"card review-card\">\n//               <div className=\"card-body\">\n//                 <div className=\"mb-3\">\n//                   <label\n//                     htmlFor=\"exampleFormControlTextarea1\"\n//                     className=\"form-label\"\n//                   >\n//                     Write Review\n//                   </label>\n//                   <textarea\n//                     className=\"form-control\"\n//                     id=\"exampleFormControlTextarea1\"\n//                     rows=\"3\"\n//                     value={newReview}\n//                     onChange={(e) => setNewReview(e.target.value)}\n//                   ></textarea>\n//                   <br />\n//                   <div className=\"col-auto\">\n//                     <button\n//                       type=\"submit\"\n//                       className=\"btn btn-primary mb-0\"\n//                       onClick={handleReviewSubmit}\n//                     >\n//                       Post Review\n//                     </button>\n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//         <br />\n//         {isPending && <p>Loading reviews...</p>}\n//         {error && <p>Error fetching reviews: {error.message}</p>}\n//         {reviews && (\n//           <div className=\"row\">\n//             {reviews.map((review, index) => (\n//               <div key={index} className=\"col-md-12 mb-4\">\n//                 <div className=\"card review-card\">\n//                   <div className=\"card-body\">\n//                     <h6 className=\"card-title reviewer-name\">\n//                       {review.user_id.username} {/* Display username */}\n//                     </h6>\n//                     <p className=\"card-text\">{review.comment}</p>\n//                     <p className=\"card-text review-date\">\n//                       {formatDate(review.date)}\n//                     </p>{\" \"}\n//                     {/* Format date and time */}\n//                   </div>\n//                 </div>\n//               </div>\n//             ))}\n//           </div>\n//         )}\n//       </section>\n//       <br />\n//     </div>\n//   );\n// };\n// export default ReviewCard;","map":{"version":3,"names":[],"sources":["D:/CRS_Backend/frontend/src/components/ReviewCard.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import useFetch from \"../hooks/useFetch\";\r\n// import { useAuthContext } from \"../hooks/useAuthContext\";\r\n// import SuccessAlert from \"../components/SuccessAlert\";\r\n\r\n// const ReviewCard = ({ carId }) => {\r\n//   const { user } = useAuthContext();\r\n\r\n//   const [newReview, setNewReview] = useState(\"\");\r\n//   const [reviews, setReviews] = useState([]);\r\n//   const [success, setSuccess] = useState(\"\");\r\n\r\n//   // Fetch reviews using the useFetch hook\r\n//   const {\r\n//     data: data,\r\n//     isPending,\r\n//     error,\r\n//   } = useFetch(`api/review/carReviews/${carId}`, user.token); // Change 'reviews' to your API endpoint\r\n\r\n//   useEffect(() => {\r\n//     if (data) {\r\n//       console.log(data);\r\n//       setReviews(data); // Update the reviews state when data is fetched\r\n//     }\r\n//   }, [data]);\r\n\r\n//   const handleReviewSubmit = async () => {\r\n//     try {\r\n//       console.log(\"hai\");\r\n//       const response = await fetch('https://car-rental-mern.onrender.com/api/review/createReview', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//           Authorization: `Bearer ${user.token}`, // Assuming you have an authentication token\r\n//         },\r\n//         body: JSON.stringify({\r\n//           comment: newReview,\r\n//           car_id : carId,\r\n//           rating : 5\r\n//           // Add other data like rating, car_id, etc. as needed\r\n//         }),\r\n//       });\r\n  \r\n//       if (!response.ok) {\r\n//         throw new Error('Failed to post review');\r\n//       }\r\n  \r\n//       const newData = {user_id : {username : user.email },comment : newReview,date : formatDate(Date.now())}\r\n//       setReviews([...reviews, newData]); \r\n//       console.log(newData);\r\n//       setNewReview(''); // Clear the textarea\r\n//       setSuccess(\"Review updated\");\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//       // Handle error, show a message, etc.\r\n//     }\r\n//   };\r\n  \r\n\r\n//   const formatDate = (dateString) => {\r\n//     const options = {\r\n//       year: \"numeric\",\r\n//       month: \"long\",\r\n//       day: \"numeric\",\r\n//       hour: \"2-digit\",\r\n//       minute: \"2-digit\",\r\n//     };\r\n\r\n//     const date = new Date(dateString);\r\n//     return date.toLocaleDateString(undefined, options);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <section className=\"container reviews-section\">\r\n//         <br />\r\n//         <h2>Reviews</h2>\r\n//         {success && <SuccessAlert success={success} />}\r\n//         <div className=\"row\">\r\n//           <div className=\"col-md-12 mb-4\">\r\n//             <div className=\"card review-card\">\r\n//               <div className=\"card-body\">\r\n//                 <div className=\"mb-3\">\r\n//                   <label\r\n//                     htmlFor=\"exampleFormControlTextarea1\"\r\n//                     className=\"form-label\"\r\n//                   >\r\n//                     Write Review\r\n//                   </label>\r\n                  \r\n//                   <textarea\r\n//                     className=\"form-control\"\r\n//                     id=\"exampleFormControlTextarea1\"\r\n//                     rows=\"3\"\r\n//                     value={newReview}\r\n//                     onChange={(e) => setNewReview(e.target.value)}\r\n//                   ></textarea>\r\n//                   <br />\r\n//                   <div className=\"col-auto\">\r\n//                     <button\r\n//                       type=\"submit\"\r\n//                       className=\"btn btn-primary mb-0\"\r\n//                       onClick={handleReviewSubmit}\r\n//                     >\r\n//                       Post Review\r\n//                     </button>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n\r\n//         <br />\r\n//         {isPending && <p>Loading reviews...</p>}\r\n//         {error && <p>Error fetching reviews: {error.message}</p>}\r\n//         {reviews && (\r\n//           <div className=\"row\">\r\n//             {reviews.map((review, index) => (\r\n//               <div key={index} className=\"col-md-12 mb-4\">\r\n//                 <div className=\"card review-card\">\r\n//                   <div className=\"card-body\">\r\n//                     <h6 className=\"card-title reviewer-name\">\r\n//                       {review.user_id.username} {/* Display username */}\r\n//                     </h6>\r\n//                     <p className=\"card-text\">{review.comment}</p>\r\n//                     <p className=\"card-text review-date\">\r\n//                       {formatDate(review.date)}\r\n//                     </p>{\" \"}\r\n//                     {/* Format date and time */}\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         )}\r\n//       </section>\r\n//       <br />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ReviewCard;\r\n"],"mappings},"metadata":{},"sourceType":"module"}